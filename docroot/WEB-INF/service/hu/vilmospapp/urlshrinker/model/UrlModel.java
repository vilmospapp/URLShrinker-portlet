/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package hu.vilmospapp.urlshrinker.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Url service. Represents a row in the &quot;UrlShrinker_Url&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link hu.vilmospapp.urlshrinker.model.impl.UrlModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link hu.vilmospapp.urlshrinker.model.impl.UrlImpl}.
 * </p>
 *
 * @author Vilmos Papp
 * @see Url
 * @see hu.vilmospapp.urlshrinker.model.impl.UrlImpl
 * @see hu.vilmospapp.urlshrinker.model.impl.UrlModelImpl
 * @generated
 */
public interface UrlModel extends BaseModel<Url> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a url model instance should use the {@link Url} interface instead.
	 */

	/**
	 * Returns the primary key of this url.
	 *
	 * @return the primary key of this url
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this url.
	 *
	 * @param primaryKey the primary key of this url
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this url.
	 *
	 * @return the uuid of this url
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this url.
	 *
	 * @param uuid the uuid of this url
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the url ID of this url.
	 *
	 * @return the url ID of this url
	 */
	public long getUrlId();

	/**
	 * Sets the url ID of this url.
	 *
	 * @param urlId the url ID of this url
	 */
	public void setUrlId(long urlId);

	/**
	 * Returns the user ID of this url.
	 *
	 * @return the user ID of this url
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this url.
	 *
	 * @param userId the user ID of this url
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this url.
	 *
	 * @return the user uuid of this url
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this url.
	 *
	 * @param userUuid the user uuid of this url
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the company ID of this url.
	 *
	 * @return the company ID of this url
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this url.
	 *
	 * @param companyId the company ID of this url
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this url.
	 *
	 * @return the group ID of this url
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this url.
	 *
	 * @param groupId the group ID of this url
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the hash of this url.
	 *
	 * @return the hash of this url
	 */
	@AutoEscape
	public String getHash();

	/**
	 * Sets the hash of this url.
	 *
	 * @param hash the hash of this url
	 */
	public void setHash(String hash);

	/**
	 * Returns the original url of this url.
	 *
	 * @return the original url of this url
	 */
	@AutoEscape
	public String getOriginalUrl();

	/**
	 * Sets the original url of this url.
	 *
	 * @param originalUrl the original url of this url
	 */
	public void setOriginalUrl(String originalUrl);

	/**
	 * Returns the private url of this url.
	 *
	 * @return the private url of this url
	 */
	public boolean getPrivateUrl();

	/**
	 * Returns <code>true</code> if this url is private url.
	 *
	 * @return <code>true</code> if this url is private url; <code>false</code> otherwise
	 */
	public boolean isPrivateUrl();

	/**
	 * Sets whether this url is private url.
	 *
	 * @param privateUrl the private url of this url
	 */
	public void setPrivateUrl(boolean privateUrl);

	/**
	 * Returns the protected url of this url.
	 *
	 * @return the protected url of this url
	 */
	public boolean getProtectedUrl();

	/**
	 * Returns <code>true</code> if this url is protected url.
	 *
	 * @return <code>true</code> if this url is protected url; <code>false</code> otherwise
	 */
	public boolean isProtectedUrl();

	/**
	 * Sets whether this url is protected url.
	 *
	 * @param protectedUrl the protected url of this url
	 */
	public void setProtectedUrl(boolean protectedUrl);

	/**
	 * Returns the password of this url.
	 *
	 * @return the password of this url
	 */
	@AutoEscape
	public String getPassword();

	/**
	 * Sets the password of this url.
	 *
	 * @param password the password of this url
	 */
	public void setPassword(String password);

	/**
	 * Returns the created date of this url.
	 *
	 * @return the created date of this url
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this url.
	 *
	 * @param createdDate the created date of this url
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified date of this url.
	 *
	 * @return the modified date of this url
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this url.
	 *
	 * @param modifiedDate the modified date of this url
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the archived of this url.
	 *
	 * @return the archived of this url
	 */
	public boolean getArchived();

	/**
	 * Returns <code>true</code> if this url is archived.
	 *
	 * @return <code>true</code> if this url is archived; <code>false</code> otherwise
	 */
	public boolean isArchived();

	/**
	 * Sets whether this url is archived.
	 *
	 * @param archived the archived of this url
	 */
	public void setArchived(boolean archived);

	/**
	 * Returns the custom url of this url.
	 *
	 * @return the custom url of this url
	 */
	public boolean getCustomUrl();

	/**
	 * Returns <code>true</code> if this url is custom url.
	 *
	 * @return <code>true</code> if this url is custom url; <code>false</code> otherwise
	 */
	public boolean isCustomUrl();

	/**
	 * Sets whether this url is custom url.
	 *
	 * @param customUrl the custom url of this url
	 */
	public void setCustomUrl(boolean customUrl);

	/**
	 * Returns the qrcode of this url.
	 *
	 * @return the qrcode of this url
	 */
	public boolean getQrcode();

	/**
	 * Returns <code>true</code> if this url is qrcode.
	 *
	 * @return <code>true</code> if this url is qrcode; <code>false</code> otherwise
	 */
	public boolean isQrcode();

	/**
	 * Sets whether this url is qrcode.
	 *
	 * @param qrcode the qrcode of this url
	 */
	public void setQrcode(boolean qrcode);

	/**
	 * Returns the statistics of this url.
	 *
	 * @return the statistics of this url
	 */
	public boolean getStatistics();

	/**
	 * Returns <code>true</code> if this url is statistics.
	 *
	 * @return <code>true</code> if this url is statistics; <code>false</code> otherwise
	 */
	public boolean isStatistics();

	/**
	 * Sets whether this url is statistics.
	 *
	 * @param statistics the statistics of this url
	 */
	public void setStatistics(boolean statistics);

	/**
	 * Returns the favicon of this url.
	 *
	 * @return the favicon of this url
	 */
	@AutoEscape
	public String getFavicon();

	/**
	 * Sets the favicon of this url.
	 *
	 * @param favicon the favicon of this url
	 */
	public void setFavicon(String favicon);

	/**
	 * Returns the preview of this url.
	 *
	 * @return the preview of this url
	 */
	@AutoEscape
	public String getPreview();

	/**
	 * Sets the preview of this url.
	 *
	 * @param preview the preview of this url
	 */
	public void setPreview(String preview);

	/**
	 * Returns the status of this url.
	 *
	 * @return the status of this url
	 */
	public int getStatus();

	/**
	 * Sets the status of this url.
	 *
	 * @param status the status of this url
	 */
	public void setStatus(int status);

	/**
	 * Returns the expiration date of this url.
	 *
	 * @return the expiration date of this url
	 */
	public Date getExpirationDate();

	/**
	 * Sets the expiration date of this url.
	 *
	 * @param expirationDate the expiration date of this url
	 */
	public void setExpirationDate(Date expirationDate);

	/**
	 * Returns the one time url of this url.
	 *
	 * @return the one time url of this url
	 */
	public boolean getOneTimeUrl();

	/**
	 * Returns <code>true</code> if this url is one time url.
	 *
	 * @return <code>true</code> if this url is one time url; <code>false</code> otherwise
	 */
	public boolean isOneTimeUrl();

	/**
	 * Sets whether this url is one time url.
	 *
	 * @param oneTimeUrl the one time url of this url
	 */
	public void setOneTimeUrl(boolean oneTimeUrl);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Url url);

	public int hashCode();

	public CacheModel<Url> toCacheModel();

	public Url toEscapedModel();

	public Url toUnescapedModel();

	public String toString();

	public String toXmlString();
}