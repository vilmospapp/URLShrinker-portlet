/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package hu.vilmospapp.urlshrinker.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import hu.vilmospapp.urlshrinker.model.Url;
import hu.vilmospapp.urlshrinker.model.UrlModel;
import hu.vilmospapp.urlshrinker.model.UrlSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Url service. Represents a row in the &quot;UrlShrinker_Url&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link hu.vilmospapp.urlshrinker.model.UrlModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UrlImpl}.
 * </p>
 *
 * @author Vilmos Papp
 * @see UrlImpl
 * @see hu.vilmospapp.urlshrinker.model.Url
 * @see hu.vilmospapp.urlshrinker.model.UrlModel
 * @generated
 */
@JSON(strict = true)
public class UrlModelImpl extends BaseModelImpl<Url> implements UrlModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a url model instance should use the {@link hu.vilmospapp.urlshrinker.model.Url} interface instead.
	 */
	public static final String TABLE_NAME = "UrlShrinker_Url";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "urlId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "hash", Types.VARCHAR },
			{ "originalUrl", Types.VARCHAR },
			{ "privateUrl", Types.BOOLEAN },
			{ "protectedUrl", Types.BOOLEAN },
			{ "password_", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "archived", Types.BOOLEAN },
			{ "customUrl", Types.BOOLEAN },
			{ "qrcode", Types.BOOLEAN },
			{ "statistics", Types.BOOLEAN },
			{ "favicon", Types.VARCHAR },
			{ "preview", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "expirationDate", Types.TIMESTAMP },
			{ "oneTimeUrl", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table UrlShrinker_Url (uuid_ VARCHAR(75) null,urlId LONG not null primary key,userId LONG,companyId LONG,groupId LONG,hash VARCHAR(75) null,originalUrl VARCHAR(75) null,privateUrl BOOLEAN,protectedUrl BOOLEAN,password_ VARCHAR(75) null,createdDate DATE null,modifiedDate DATE null,archived BOOLEAN,customUrl BOOLEAN,qrcode BOOLEAN,statistics BOOLEAN,favicon VARCHAR(75) null,preview VARCHAR(75) null,status INTEGER,expirationDate DATE null,oneTimeUrl BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table UrlShrinker_Url";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.hu.vilmospapp.urlshrinker.model.Url"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.hu.vilmospapp.urlshrinker.model.Url"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.hu.vilmospapp.urlshrinker.model.Url"),
			true);
	public static long ARCHIVED_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long EXPIRATIONDATE_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long HASH_COLUMN_BITMASK = 16L;
	public static long PRIVATEURL_COLUMN_BITMASK = 32L;
	public static long PROTECTEDURL_COLUMN_BITMASK = 64L;
	public static long USERID_COLUMN_BITMASK = 128L;
	public static long UUID_COLUMN_BITMASK = 256L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Url toModel(UrlSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Url model = new UrlImpl();

		model.setUuid(soapModel.getUuid());
		model.setUrlId(soapModel.getUrlId());
		model.setUserId(soapModel.getUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setHash(soapModel.getHash());
		model.setOriginalUrl(soapModel.getOriginalUrl());
		model.setPrivateUrl(soapModel.getPrivateUrl());
		model.setProtectedUrl(soapModel.getProtectedUrl());
		model.setPassword(soapModel.getPassword());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setArchived(soapModel.getArchived());
		model.setCustomUrl(soapModel.getCustomUrl());
		model.setQrcode(soapModel.getQrcode());
		model.setStatistics(soapModel.getStatistics());
		model.setFavicon(soapModel.getFavicon());
		model.setPreview(soapModel.getPreview());
		model.setStatus(soapModel.getStatus());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setOneTimeUrl(soapModel.getOneTimeUrl());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Url> toModels(UrlSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Url> models = new ArrayList<Url>(soapModels.length);

		for (UrlSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.hu.vilmospapp.urlshrinker.model.Url"));

	public UrlModelImpl() {
	}

	public long getPrimaryKey() {
		return _urlId;
	}

	public void setPrimaryKey(long primaryKey) {
		setUrlId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_urlId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Url.class;
	}

	public String getModelClassName() {
		return Url.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("urlId", getUrlId());
		attributes.put("userId", getUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("hash", getHash());
		attributes.put("originalUrl", getOriginalUrl());
		attributes.put("privateUrl", getPrivateUrl());
		attributes.put("protectedUrl", getProtectedUrl());
		attributes.put("password", getPassword());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("archived", getArchived());
		attributes.put("customUrl", getCustomUrl());
		attributes.put("qrcode", getQrcode());
		attributes.put("statistics", getStatistics());
		attributes.put("favicon", getFavicon());
		attributes.put("preview", getPreview());
		attributes.put("status", getStatus());
		attributes.put("expirationDate", getExpirationDate());
		attributes.put("oneTimeUrl", getOneTimeUrl());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long urlId = (Long)attributes.get("urlId");

		if (urlId != null) {
			setUrlId(urlId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String hash = (String)attributes.get("hash");

		if (hash != null) {
			setHash(hash);
		}

		String originalUrl = (String)attributes.get("originalUrl");

		if (originalUrl != null) {
			setOriginalUrl(originalUrl);
		}

		Boolean privateUrl = (Boolean)attributes.get("privateUrl");

		if (privateUrl != null) {
			setPrivateUrl(privateUrl);
		}

		Boolean protectedUrl = (Boolean)attributes.get("protectedUrl");

		if (protectedUrl != null) {
			setProtectedUrl(protectedUrl);
		}

		String password = (String)attributes.get("password");

		if (password != null) {
			setPassword(password);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean archived = (Boolean)attributes.get("archived");

		if (archived != null) {
			setArchived(archived);
		}

		Boolean customUrl = (Boolean)attributes.get("customUrl");

		if (customUrl != null) {
			setCustomUrl(customUrl);
		}

		Boolean qrcode = (Boolean)attributes.get("qrcode");

		if (qrcode != null) {
			setQrcode(qrcode);
		}

		Boolean statistics = (Boolean)attributes.get("statistics");

		if (statistics != null) {
			setStatistics(statistics);
		}

		String favicon = (String)attributes.get("favicon");

		if (favicon != null) {
			setFavicon(favicon);
		}

		String preview = (String)attributes.get("preview");

		if (preview != null) {
			setPreview(preview);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date expirationDate = (Date)attributes.get("expirationDate");

		if (expirationDate != null) {
			setExpirationDate(expirationDate);
		}

		Boolean oneTimeUrl = (Boolean)attributes.get("oneTimeUrl");

		if (oneTimeUrl != null) {
			setOneTimeUrl(oneTimeUrl);
		}
	}

	@JSON
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	public long getUrlId() {
		return _urlId;
	}

	public void setUrlId(long urlId) {
		_urlId = urlId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public String getHash() {
		if (_hash == null) {
			return StringPool.BLANK;
		}
		else {
			return _hash;
		}
	}

	public void setHash(String hash) {
		_columnBitmask |= HASH_COLUMN_BITMASK;

		if (_originalHash == null) {
			_originalHash = _hash;
		}

		_hash = hash;
	}

	public String getOriginalHash() {
		return GetterUtil.getString(_originalHash);
	}

	@JSON
	public String getOriginalUrl() {
		if (_originalUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _originalUrl;
		}
	}

	public void setOriginalUrl(String originalUrl) {
		_originalUrl = originalUrl;
	}

	@JSON
	public boolean getPrivateUrl() {
		return _privateUrl;
	}

	public boolean isPrivateUrl() {
		return _privateUrl;
	}

	public void setPrivateUrl(boolean privateUrl) {
		_columnBitmask |= PRIVATEURL_COLUMN_BITMASK;

		if (!_setOriginalPrivateUrl) {
			_setOriginalPrivateUrl = true;

			_originalPrivateUrl = _privateUrl;
		}

		_privateUrl = privateUrl;
	}

	public boolean getOriginalPrivateUrl() {
		return _originalPrivateUrl;
	}

	@JSON
	public boolean getProtectedUrl() {
		return _protectedUrl;
	}

	public boolean isProtectedUrl() {
		return _protectedUrl;
	}

	public void setProtectedUrl(boolean protectedUrl) {
		_columnBitmask |= PROTECTEDURL_COLUMN_BITMASK;

		if (!_setOriginalProtectedUrl) {
			_setOriginalProtectedUrl = true;

			_originalProtectedUrl = _protectedUrl;
		}

		_protectedUrl = protectedUrl;
	}

	public boolean getOriginalProtectedUrl() {
		return _originalProtectedUrl;
	}

	@JSON
	public String getPassword() {
		if (_password == null) {
			return StringPool.BLANK;
		}
		else {
			return _password;
		}
	}

	public void setPassword(String password) {
		_password = password;
	}

	@JSON
	public Date getCreatedDate() {
		return _createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public boolean getArchived() {
		return _archived;
	}

	public boolean isArchived() {
		return _archived;
	}

	public void setArchived(boolean archived) {
		_columnBitmask |= ARCHIVED_COLUMN_BITMASK;

		if (!_setOriginalArchived) {
			_setOriginalArchived = true;

			_originalArchived = _archived;
		}

		_archived = archived;
	}

	public boolean getOriginalArchived() {
		return _originalArchived;
	}

	@JSON
	public boolean getCustomUrl() {
		return _customUrl;
	}

	public boolean isCustomUrl() {
		return _customUrl;
	}

	public void setCustomUrl(boolean customUrl) {
		_customUrl = customUrl;
	}

	@JSON
	public boolean getQrcode() {
		return _qrcode;
	}

	public boolean isQrcode() {
		return _qrcode;
	}

	public void setQrcode(boolean qrcode) {
		_qrcode = qrcode;
	}

	@JSON
	public boolean getStatistics() {
		return _statistics;
	}

	public boolean isStatistics() {
		return _statistics;
	}

	public void setStatistics(boolean statistics) {
		_statistics = statistics;
	}

	@JSON
	public String getFavicon() {
		if (_favicon == null) {
			return StringPool.BLANK;
		}
		else {
			return _favicon;
		}
	}

	public void setFavicon(String favicon) {
		_favicon = favicon;
	}

	@JSON
	public String getPreview() {
		if (_preview == null) {
			return StringPool.BLANK;
		}
		else {
			return _preview;
		}
	}

	public void setPreview(String preview) {
		_preview = preview;
	}

	@JSON
	public int getStatus() {
		return _status;
	}

	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	public Date getExpirationDate() {
		return _expirationDate;
	}

	public void setExpirationDate(Date expirationDate) {
		_columnBitmask |= EXPIRATIONDATE_COLUMN_BITMASK;

		if (_originalExpirationDate == null) {
			_originalExpirationDate = _expirationDate;
		}

		_expirationDate = expirationDate;
	}

	public Date getOriginalExpirationDate() {
		return _originalExpirationDate;
	}

	@JSON
	public boolean getOneTimeUrl() {
		return _oneTimeUrl;
	}

	public boolean isOneTimeUrl() {
		return _oneTimeUrl;
	}

	public void setOneTimeUrl(boolean oneTimeUrl) {
		_oneTimeUrl = oneTimeUrl;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Url.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Url toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Url)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public Url toUnescapedModel() {
		return (Url)this;
	}

	@Override
	public Object clone() {
		UrlImpl urlImpl = new UrlImpl();

		urlImpl.setUuid(getUuid());
		urlImpl.setUrlId(getUrlId());
		urlImpl.setUserId(getUserId());
		urlImpl.setCompanyId(getCompanyId());
		urlImpl.setGroupId(getGroupId());
		urlImpl.setHash(getHash());
		urlImpl.setOriginalUrl(getOriginalUrl());
		urlImpl.setPrivateUrl(getPrivateUrl());
		urlImpl.setProtectedUrl(getProtectedUrl());
		urlImpl.setPassword(getPassword());
		urlImpl.setCreatedDate(getCreatedDate());
		urlImpl.setModifiedDate(getModifiedDate());
		urlImpl.setArchived(getArchived());
		urlImpl.setCustomUrl(getCustomUrl());
		urlImpl.setQrcode(getQrcode());
		urlImpl.setStatistics(getStatistics());
		urlImpl.setFavicon(getFavicon());
		urlImpl.setPreview(getPreview());
		urlImpl.setStatus(getStatus());
		urlImpl.setExpirationDate(getExpirationDate());
		urlImpl.setOneTimeUrl(getOneTimeUrl());

		urlImpl.resetOriginalValues();

		return urlImpl;
	}

	public int compareTo(Url url) {
		long primaryKey = url.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Url)) {
			return false;
		}

		Url url = (Url)obj;

		long primaryKey = url.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		UrlModelImpl urlModelImpl = this;

		urlModelImpl._originalUuid = urlModelImpl._uuid;

		urlModelImpl._originalUserId = urlModelImpl._userId;

		urlModelImpl._setOriginalUserId = false;

		urlModelImpl._originalCompanyId = urlModelImpl._companyId;

		urlModelImpl._setOriginalCompanyId = false;

		urlModelImpl._originalGroupId = urlModelImpl._groupId;

		urlModelImpl._setOriginalGroupId = false;

		urlModelImpl._originalHash = urlModelImpl._hash;

		urlModelImpl._originalPrivateUrl = urlModelImpl._privateUrl;

		urlModelImpl._setOriginalPrivateUrl = false;

		urlModelImpl._originalProtectedUrl = urlModelImpl._protectedUrl;

		urlModelImpl._setOriginalProtectedUrl = false;

		urlModelImpl._originalArchived = urlModelImpl._archived;

		urlModelImpl._setOriginalArchived = false;

		urlModelImpl._originalExpirationDate = urlModelImpl._expirationDate;

		urlModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Url> toCacheModel() {
		UrlCacheModel urlCacheModel = new UrlCacheModel();

		urlCacheModel.uuid = getUuid();

		String uuid = urlCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			urlCacheModel.uuid = null;
		}

		urlCacheModel.urlId = getUrlId();

		urlCacheModel.userId = getUserId();

		urlCacheModel.companyId = getCompanyId();

		urlCacheModel.groupId = getGroupId();

		urlCacheModel.hash = getHash();

		String hash = urlCacheModel.hash;

		if ((hash != null) && (hash.length() == 0)) {
			urlCacheModel.hash = null;
		}

		urlCacheModel.originalUrl = getOriginalUrl();

		String originalUrl = urlCacheModel.originalUrl;

		if ((originalUrl != null) && (originalUrl.length() == 0)) {
			urlCacheModel.originalUrl = null;
		}

		urlCacheModel.privateUrl = getPrivateUrl();

		urlCacheModel.protectedUrl = getProtectedUrl();

		urlCacheModel.password = getPassword();

		String password = urlCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			urlCacheModel.password = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			urlCacheModel.createdDate = createdDate.getTime();
		}
		else {
			urlCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			urlCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			urlCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		urlCacheModel.archived = getArchived();

		urlCacheModel.customUrl = getCustomUrl();

		urlCacheModel.qrcode = getQrcode();

		urlCacheModel.statistics = getStatistics();

		urlCacheModel.favicon = getFavicon();

		String favicon = urlCacheModel.favicon;

		if ((favicon != null) && (favicon.length() == 0)) {
			urlCacheModel.favicon = null;
		}

		urlCacheModel.preview = getPreview();

		String preview = urlCacheModel.preview;

		if ((preview != null) && (preview.length() == 0)) {
			urlCacheModel.preview = null;
		}

		urlCacheModel.status = getStatus();

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			urlCacheModel.expirationDate = expirationDate.getTime();
		}
		else {
			urlCacheModel.expirationDate = Long.MIN_VALUE;
		}

		urlCacheModel.oneTimeUrl = getOneTimeUrl();

		return urlCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", urlId=");
		sb.append(getUrlId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", hash=");
		sb.append(getHash());
		sb.append(", originalUrl=");
		sb.append(getOriginalUrl());
		sb.append(", privateUrl=");
		sb.append(getPrivateUrl());
		sb.append(", protectedUrl=");
		sb.append(getProtectedUrl());
		sb.append(", password=");
		sb.append(getPassword());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", archived=");
		sb.append(getArchived());
		sb.append(", customUrl=");
		sb.append(getCustomUrl());
		sb.append(", qrcode=");
		sb.append(getQrcode());
		sb.append(", statistics=");
		sb.append(getStatistics());
		sb.append(", favicon=");
		sb.append(getFavicon());
		sb.append(", preview=");
		sb.append(getPreview());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", expirationDate=");
		sb.append(getExpirationDate());
		sb.append(", oneTimeUrl=");
		sb.append(getOneTimeUrl());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("hu.vilmospapp.urlshrinker.model.Url");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>urlId</column-name><column-value><![CDATA[");
		sb.append(getUrlId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hash</column-name><column-value><![CDATA[");
		sb.append(getHash());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>originalUrl</column-name><column-value><![CDATA[");
		sb.append(getOriginalUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>privateUrl</column-name><column-value><![CDATA[");
		sb.append(getPrivateUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>protectedUrl</column-name><column-value><![CDATA[");
		sb.append(getProtectedUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>password</column-name><column-value><![CDATA[");
		sb.append(getPassword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>archived</column-name><column-value><![CDATA[");
		sb.append(getArchived());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customUrl</column-name><column-value><![CDATA[");
		sb.append(getCustomUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>qrcode</column-name><column-value><![CDATA[");
		sb.append(getQrcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statistics</column-name><column-value><![CDATA[");
		sb.append(getStatistics());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>favicon</column-name><column-value><![CDATA[");
		sb.append(getFavicon());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preview</column-name><column-value><![CDATA[");
		sb.append(getPreview());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expirationDate</column-name><column-value><![CDATA[");
		sb.append(getExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oneTimeUrl</column-name><column-value><![CDATA[");
		sb.append(getOneTimeUrl());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Url.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Url.class };
	private String _uuid;
	private String _originalUuid;
	private long _urlId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _hash;
	private String _originalHash;
	private String _originalUrl;
	private boolean _privateUrl;
	private boolean _originalPrivateUrl;
	private boolean _setOriginalPrivateUrl;
	private boolean _protectedUrl;
	private boolean _originalProtectedUrl;
	private boolean _setOriginalProtectedUrl;
	private String _password;
	private Date _createdDate;
	private Date _modifiedDate;
	private boolean _archived;
	private boolean _originalArchived;
	private boolean _setOriginalArchived;
	private boolean _customUrl;
	private boolean _qrcode;
	private boolean _statistics;
	private String _favicon;
	private String _preview;
	private int _status;
	private Date _expirationDate;
	private Date _originalExpirationDate;
	private boolean _oneTimeUrl;
	private long _columnBitmask;
	private Url _escapedModel;
}